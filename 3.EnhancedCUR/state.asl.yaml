StartAt: LoadJobs
States:
  # StoreInputs:
  #   Type: Pass
  #   Next: LoadJobs
  #   Assign:
  #     year.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 0)
  #     month.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 1)
  LoadJobs:
    Type: Parallel
    Next: AllocateEksJob
    ResultPath: $.LoadJobsResult
    Branches:
    - StartAt: StandardizeJob
      States:
        StandardizeJob:
          Type: Task
          Resource: arn:aws:states:::glue:startJobRun.sync
          Parameters:
            JobName: '${StandardizeJobName}'
            Arguments:
              --year.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 0)
              --month.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 1)
          InputPath: $
          ResultPath: $.StandardizeResult
          End: True
    - StartAt: LoadNRTEKSMetricsJob
      States:
        LoadNRTEKSMetricsJob:
          Type: Task
          Resource: arn:aws:states:::glue:startJobRun.sync
          Parameters:
            JobName: '${LoadPrometheusEKSMetricsJob}'
            Arguments:
              --year.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 0)
              --month.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 1)
              # --region: ap-northeast-1
          InputPath: $
          ResultPath: $.LoadNRTEKSMetricsResult
          End: True
    - StartAt: LoadNRTAPPMetricsJob
      States:
        LoadNRTAPPMetricsJob:
          Type: Task
          Resource: arn:aws:states:::glue:startJobRun.sync
          Parameters:
            JobName: '${LoadPrometheusAPPMetricsJob}'
            Arguments:
              --year.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 0)
              --month.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 1)
              # --region: ap-northeast-1
          InputPath: $
          ResultPath: $.LoadNRTAPPMetricsResult
          End: True
  AllocateEksJob:
    Type: Task
    Resource: arn:aws:states:::glue:startJobRun.sync
    Parameters:
      JobName: '${AllocateEksJob}'
      Arguments:
        --year.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 0)
        --month.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 1)
    InputPath: $
    ResultPath: $.AllocateEksResult
    Next: AllocateUntagJob
  AllocateUntagJob:
    Type: Task
    Resource: arn:aws:states:::glue:startJobRun.sync
    Parameters:
      JobName: '${AllocateUntagJob}'
      Arguments:
        --year.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 0)
        --month.$: States.ArrayGetItem(States.StringSplit($.time, '-,T'), 1)
    InputPath: $
    ResultPath: $.AllocateUntagResult
    Next: CreateIngestion
  CreateIngestion:
    Type: Task
    Parameters:
      AwsAccountId: '${AwsAccountId}'
      DataSetId: '${QuicksightDataSetId}'
      IngestionId.$: States.UUID()
      IngestionType: INCREMENTAL_REFRESH
    Resource: arn:aws:states:::aws-sdk:quicksight:createIngestion
    End: true
